#!/usr/bin/env bash

error() {
    printf >&2 '%s' "$1"
    exit "${2:-1}"
}

get-nix-system() {
    nix show-config | grep '^system =' | sed 's/[^=]* = \(.*\)/\1/'
}

export-dev-shell-name() {
    export IN_NIX_DEV_SHELL_NAME=$(nix eval --raw ".#defaultPackage.$(get-nix-system).pname" &>/dev/null)
    if [ -z "$IN_NIX_DEV_SHELL_NAME" ]; then
        export IN_NIX_DEV_SHELL_NAME="$(basename "$(pwd)")"
    fi
}

escshell="$(printf '%q' "$SHELL")"
shellcmd="SHELL=$escshell $escshell"

while (($#)); do
    case "$1" in
        -s|--bash) 
            # turn off custom shell
            shellcmd="return"
            shift
            ;;
        -p)
            shift
            # use premade template in ~/prog/$1
            if [ -z "$devname" ]; then
                devname="$1"
            else
                error "Cannot take multiple devnames"
            fi
            shift
            ;;
        -A)
            shift
            # use Nixpkgs package
            export IN_NIX_DEV_SHELL_NAME="$1"
            exec nix-shell '<nixpkgs>' -A "$1" --command "$shellcmd"
            ;;
        -E)
            shift
            # evaluate expression
            export IN_NIX_DEV_SHELL_NAME="<expr>"
            exec nix-shell '<nixpkgs>' -E "$1" --command "$shellcmd"
            ;;
        -c)
            shift
            # execute command instead of shell
            if [ -z "$cmd" ]; then
                cmd="$1"
            else
                error "Cannot take multiple commands"
            fi
            shift
            ;;
        *)
            if [[ "$1" == *"#"* ]]; then
                # it's a specific flake
                devshellname="$1"
            else
                # it's not
                devshellname=".#$1"
            fi
            shift
            ;;
    esac
done

if [ -z "$devname" ]; then 
    # just normal develop
    if [[ -f ./flake.nix || "$devshellname" == *#* ]]; then
        # flakes, use `nix develop`
        export-dev-shell-name
        args=()
        if [ ! -z "$devshellname" ]; then
            args+=("$devshellname")
        fi
        if [ -z "$cmd" ]; then
            exec nix develop "${args[@]}" --command env "SHELL=$SHELL" "$SHELL"
        else
            exec nix develop "${args[@]}" --command env "SHELL=$SHELL" "$SHELL" "-c" "$cmd"
        fi
    elif [ -f ./shell.nix -o -f ./default.nix ]; then
        # old nix, use `nix-shell`
        export-dev-shell-name
        if [ -z "$cmd" ]; then
            exec nix-shell --command "$shellcmd"
        else
            exec nix-shell --command "SHELL=$SHELL $cmd"
        fi
    else
        # do nothing
        echo "! No files detected, doing nothing"
    fi
else
    # want to develop a specific lang
    export IN_NIX_DEV_SHELL_NAME="$devname"
    if [ -z "$cmd" ]; then
        exec nix develop ~/prog/"$devname" --command env "SHELL=$SHELL" "$SHELL"
    else
        exec nix develop ~/prog/"$devname" --command env "SHELL=$SHELL" "$SHELL" "-c" "$cmd"
    fi
fi
