#!/usr/bin/env bash

# Shortcut for `nix shell nixpkgs#$1`, plus some niceties.

if [ -z "$1" ]; then echo "You must specify a package"; exit 1; fi

nixcmd="shell"

exec_or_echo() {
    exec "$@"
}

markdone() {
    if [[ "$1" != "-c" ]]; then
        done=1
    fi
}

nixargs=()
while [ -z "$done" ]; do
    case "$1" in
        -l)
            # Use the latest version of nixpkgs
            shift
            nixargs+=("nixpkgs#$1")
            name="$1"
            shift
            markdone "$@"
            ;;
        -b)
            # Use the branch/rev of nixpkgs specified
            # (e.g. `get -b master discord`)
            shift
            branch="$1"
            shift
            ;;
        --dry-run)
            # echo the command instead of executing it
            shift
            exec_or_echo() {
                printf "%s\n" "$@"
            }
            ;;
        -E)
            # use an expr
            shift
            expr="$1"
            shift
            if [ -z "$branch" ]; then
                nixpkgs="<nixpkgs>"
                name="$SHLVL.expr"
            else
                nixpkgs="(builtins.getFlake \"github:NixOS/nixpkgs/$branch\")"
                name="$branch/$SHLVL.expr"
            fi
            nixargs+=(--impure --expr "with import $nixpkgs {}; $expr")
            markdone "$@"
            ;;
        -r)
            # run the package
            shift
            nixcmd="run"
            ;;
        -p)
            # get the path
            shift
            nixcmd="path-info"
            ;;
        -c)
            # run a specific shell command
            shift
            shscript="$1"
            done=1
            shift
            ;;
        *)
            if [[ "$1" == *"#"* || "$1" == *":"* ]]; then
                # it's a specific flake
                nixargs+=("$1")
                name="$1"
            else
                if [ -z "$branch" ]; then
                    # I put `nixpkgs` as the nixpkgs rev the system was built from in $NIX_PATH.
                    # This makes sure I don't have to download nixpkgs *every* *single* *time*.
                    nixpkgs="$(nix eval --impure --expr '<nixpkgs>')"
                    name="$1"
                else
                    nixpkgs="github:NixOS/nixpkgs/$branch"
                    name="$branch/$1"
                fi
                nixargs+=("$nixpkgs#$1")
            fi
            shift
            markdone "$@"
            ;;
    esac
done

if [ -z "$GOTTEN_NIX_PKGS" ]; then
    export GOTTEN_NIX_PKGS="$name"
else
    export GOTTEN_NIX_PKGS="$GOTTEN_NIX_PKGS, $name"
fi

args=()
args+=("--impure") # https://discourse.nixos.org/t/nix-run-does-not-install-unfree-packages-nixpkgs-allow-unfree-doesnt-seem-to-help/12039
if [ "$nixcmd" = "shell" ]; then
    if [ ! -z "$shscript" ]; then
        args+=("--command" "$SHELL" "-c" "$shscript")
    elif [ "$#" -ge 1 ]; then
        args+=("--command" "$0" "$@")
    fi
elif [ "$nixcmd" = "run" ]; then
    if [ ! -z "$expr" ]; then
        # special handling is required for some reason
        args+=(".")
    fi
    args+=("--")
    args+=("$@")
elif [ "$nixcmd" = "path-info" ]; then
    # note: path-info doesn't install if it doesn't already exist
    # so get it first
    nix build --no-link "${nixargs[@]}"
fi

exec_or_echo nix "$nixcmd" "${nixargs[@]}" "${args[@]}"
